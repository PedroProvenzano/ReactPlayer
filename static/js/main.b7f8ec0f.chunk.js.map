{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","util.js","App.js","reportWebVitals.js","index.js"],"names":["Player","currentSong","setCurrentSong","isPlaying","setIsPlaying","audioRef","songInfo","setSongInfo","songs","setSongs","activeLibraryHandler","nextPrev","newSongs","map","seng","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","findIndex","song","currentIndex","length","current","play","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","onChange","e","target","value","min","max","duration","type","name","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","alt","src","cover","artist","LibrarySong","songSelectHandler","Library","isLibraryOpen","Nav","setIsLibraryOpen","faMusic","chillHop","audio","uuidv4","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7f8ec0f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({\r\n  currentSong,\r\n  setCurrentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  songInfo,\r\n  setSongInfo,\r\n  songs,\r\n  setSongs,\r\n}) => {\r\n  const activeLibraryHandler = (nextPrev) => {\r\n    const newSongs = songs.map((seng) => {\r\n      if (seng.id === nextPrev.id) {\r\n        return {\r\n          ...seng,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...seng,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n  };\r\n\r\n  // Event handlers\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = await songs.findIndex(\r\n      (song) => song.id === currentSong.id\r\n    );\r\n    if (direction === \"skip-back\") {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        currentIndex = songs.length;\r\n      }\r\n      await setCurrentSong(songs[currentIndex - 1]);\r\n      activeLibraryHandler(songs[currentIndex - 1]);\r\n      if (isPlaying) {\r\n        audioRef.current.play();\r\n      }\r\n    } else {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n      if (isPlaying) {\r\n        audioRef.current.play();\r\n      }\r\n    }\r\n  };\r\n  // Add the styles\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n  // State\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            onChange={dragHandler}\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            type=\"range\"\r\n            name=\"\"\r\n            id=\"\"\r\n            value={songInfo.currentTime}\r\n          />\r\n          <div style={trackAnim} className=\"animate-track\"></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-back\")}\r\n          className=\"skip-back\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-forward\")}\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\n\r\nconst Song = ({ currentSong }) => {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img alt={currentSong.name} src={currentSong.cover}></img>\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import React from \"react\";\r\n\r\nconst LibrarySong = ({\r\n  song,\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n}) => {\r\n  const songSelectHandler = async () => {\r\n    await setCurrentSong(song);\r\n    const newSongs = songs.map((seng) => {\r\n      if (seng.id === song.id) {\r\n        return {\r\n          ...seng,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...seng,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n    if (isPlaying) {\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      onClick={songSelectHandler}\r\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\r\n    >\r\n      <img alt={song.name} src={song.cover}></img>\r\n      <div className=\"song-description\">\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  isLibraryOpen,\r\n}) => {\r\n  return (\r\n    <div className={`library ${isLibraryOpen ? \"active-library\" : \"\"}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            setCurrentSong={setCurrentSong}\r\n            song={song}\r\n            songs={songs}\r\n            key={song.id}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({ isLibraryOpen, setIsLibraryOpen }) => {\r\n  return (\r\n    <nav>\r\n      <h1>Waves</h1>\r\n      <button\r\n        className={`${isLibraryOpen ? \"button-active\" : \"\"}`}\r\n        onClick={() => setIsLibraryOpen(!isLibraryOpen)}\r\n      >\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic} />\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Lonely Waves\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2021/02/80be32197ca7971424bef5e4d0c6810e1d4334c6-1024x1024.jpg\",\r\n      artist: \"C Y G N\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=14980\",\r\n      color: [\"#0C112E\", \"#E482F5\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Cascade\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2021/02/70a56749b8b89815fa75446030c6ba57d2c34de7-1024x1024.jpg\",\r\n      artist: \"Knowmadic\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=13091\",\r\n      color: [\"#EF8462\", \"#E09843\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Runaway\",\r\n      cover:\r\n        \"https://uploads-ssl.webflow.com/5fc4bca9bd65e8f2bf87f576/604b79c66576a156c11c72f5_80Runaway---Square-Spring21-p-2000.jpeg\",\r\n      artist: \"Blue Wednesday\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=12135\",\r\n      color: [\"#D54C46\", \"#F7B78B\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n  ];\r\n}\r\n\r\nexport default chillHop;\r\n","import React, { useState, useRef } from \"react\";\n// Import styles\nimport \"./styles/app.scss\";\n// Agregando comp\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n\n// import util\nimport data from \"./util\";\n\nfunction App() {\n  // Ref\n  const audioRef = useRef(null);\n  // State\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [isLibraryOpen, setIsLibraryOpen] = useState(false);\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    // Calculate percentage\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100);\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration,\n      animationPercentage: animation,\n    });\n  };\n  const songEndHandler = async () => {\n    let currentIndex = await songs.findIndex(\n      (song) => song.id === currentSong.id\n    );\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    audioRef.current.play();\n  };\n  return (\n    <div className={`App ${isLibraryOpen ? \"library-active\" : \"\"}`}>\n      <Nav isLibraryOpen={isLibraryOpen} setIsLibraryOpen={setIsLibraryOpen} />\n      <Song currentSong={currentSong} />\n      <Player\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        songs={songs}\n        setSongs={setSongs}\n      />\n      <Library\n        isLibraryOpen={isLibraryOpen}\n        audioRef={audioRef}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n      />\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}